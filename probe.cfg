[probe]
pin: ^PC6                    ; use pin PA0 and enable internal pullup resistor as this is an NC switch  use ! to invert if needed
x_offset: 1.0                ; probe is offset +14 mm from nozzle
y_offset: 53.0               ; probe is +55 mm from nozzle in Y direction
z_offset: 2.3                ; trigger point is 9.5 mm below nozzle. larger numbers move effective Z0 CLOSER to the nozzle
speed: 5                     ; probing speed of 5mm/second ideal is <10mm/sec  
samples: 2                   ; number of probes to perform per sample
samples_result: average      ; normalization method: see config reference
sample_retract_dist: 0.6
samples_tolerance: 0.007
samples_tolerance_retries: 3

[servo probe_servo]
pin: PA5
maximum_servo_angle: 180
minimum_pulse_width: 0.0005
maximum_pulse_width: 0.0028
initial_angle: 98

# [z_tilt]
# z_positions:
#   5, 100
#   300, 100
# points:
#   5, 100
#   300, 100
# speed: 200
# horizontal_move_z: 6
# retries: 4
# retry_tolerance: 0.01

[bed_mesh]
speed: 200
horizontal_move_z: 3
mesh_min: 25, 55
mesh_max: 300, 220
probe_count: 10, 6
mesh_pps: 3, 3
algorithm: bicubic
bicubic_tension: 0.2
fade_start: 0.6
fade_end: 4
move_check_distance: 5
split_delta_z: .025

[screws_tilt_adjust]
screw1: 5, 0
screw1_name: front left screw
screw2: 300, 0
screw2_name: front right screw
screw3: 300, 190
screw3_name: rear right screw
screw4: 5, 190
screw4_name: rear left screw
horizontal_move_z: 8
speed: 200
screw_thread: CW-M3

[homing_override]
axes: z
gcode:
    G90
    PROBE_STATUS
    _ERROR_PROBE_DETACH
    G28

[gcode_macro BED_MESH_CALIBRATE]
rename_existing:    BED_MESH_CALIBRATE_ORIGINAL
gcode:
  PROBE_ATTACH                                                                                                     # attaching probe
  RESPOND TYPE=command MSG="Start bed mesh leveling"                                                               # send message to console
  BED_MESH_CALIBRATE_ORIGINAL                                                                                      # check bed level
  RESPOND TYPE=command MSG="End bed mesh leveling"                                                                 # send message to console
  PROBE_DETACH                                                                                                     # detaching probe

[gcode_macro PROBE_CALIB]
gcode:
  G90
  G0 X150 Y100 F6000
  PROBE_CALIBRATE
  ABORT

[gcode_macro _PROBE_VARS]
variable_probe_attached: True
variable_dock_position: [39.5, 213]                                                                                  # XY coordinates of dock position
variable_bed_clearance: 30                                                                                         # bed clearance for moving to/from dock position
variable_dock_height: 9                                                                                            # probe attach/detach Z position
variable_servo_up: 6                                                                                               # dock's active angle position
variable_servo_down: 98                                                                                            # dock's inactive position
gcode:
  RESPOND TYPE=command MSG="{ printer['gcode_macro _PROBE_VARS'] }"                                                # send message with all variables to console

[gcode_macro PROBE_ATTACH]
gcode:
  PROBE_STATUS
  _PROBE_ATTACH

[gcode_macro PROBE_DETACH]
gcode:
  PROBE_STATUS
  _PROBE_DETACH

[gcode_macro _PROBE_ATTACH]
gcode:
  {% set probe_vars = printer["gcode_macro _PROBE_VARS"] %}
  {% if not probe_vars.probe_attached %}
    G90                                                                                                            # absolute positioning
    {% if printer.toolhead.homed_axes != "xyz" %} G28 {% endif %}                                                  # home if not homed
    RESPOND TYPE=command MSG="Attaching probe"                                                                     # send message to console
    G0 X{probe_vars.dock_position[0]} Y{probe_vars.dock_position[1]} Z{probe_vars.bed_clearance} F6000             # move the carriage to dock position
    G4 P500                                                                                                        # wait 0,5s      
    SET_SERVO SERVO=probe_servo ANGLE={probe_vars.servo_up}                                                        # move probe dock up
    G4 P500                                                                                                        # wait 0,5s  
    M400                                                                                                           # wait all moves is done
    G0 Z{probe_vars.dock_height} F3000                                                                             # pick up probe
    G0 Z{probe_vars.bed_clearance} F3000                                                                           # move bed down 
    G0 X1 Y1 F6000                                                                                                 # move toolhead out of the dock to X1 Y1 coordinate
    SET_SERVO SERVO=probe_servo ANGLE={probe_vars.servo_down}                                                      # move probe dock down
    G4 P1500                                                                                                       # wait 1,5s  
    SET_SERVO SERVO=probe_servo WIDTH=0                                                                            # disable servo
    PROBE_STATUS
    _ERROR_PROBE_ATTACH                                                                                            # check probe
    RESPOND TYPE=command MSG="Probe is attached"                                                                   # send message to console
  {% else %}
    RESPOND TYPE=command MSG="Probe is already attached"                                                           # send message to console
  {% endif %}

[gcode_macro _PROBE_DETACH]
gcode:
  {% set probe_vars = printer["gcode_macro _PROBE_VARS"] %}
  {% if probe_vars.probe_attached %}
    G90                                                                                                             # absolute positioning
    {% if printer.toolhead.homed_axes != "xyz" %} G28 {% endif %}                                                   # home if not homed
    RESPOND TYPE=command MSG="Detaching probe"                                                                      # send message to console
    G0 X{probe_vars.dock_position[0]} Y{probe_vars.dock_position[1]} Z{probe_vars.bed_clearance} F6000              # move the carriage to dock position
    G4 P500                                                                                                         # wait 0,5s  
    M400
    SET_SERVO SERVO=probe_servo ANGLE={probe_vars.servo_up}                                                         # move probe dock up
    G4 P500                                                                                                         # wait 0,5s  
    M400                                                                                                            # wait all moves is done
    G0 Z{probe_vars.dock_height} F3000                                                                              # detach probe
    G0 Y{probe_vars.dock_position[1]-30} F6000
    G0 X1 Y1 F6000                                                                                                  # move toolhead out of the dock to X1 Y1 coordinate
    SET_SERVO SERVO=probe_servo ANGLE={probe_vars.servo_down}                                                       # move probe dock down
    G4 P1500                                                                                                        # wait 1,5s  
    SET_SERVO SERVO=probe_servo WIDTH=0                                                                             # disable servo
    PROBE_STATUS
    _ERROR_PROBE_DETACH                                                                                             # check probe
    RESPOND TYPE=command MSG="Probe is detached"                                                                    # send message to console
  {% else %}
    RESPOND TYPE=command MSG="Probe is already detached"                                                            # send message to console
  {% endif %}

[gcode_macro _ERROR_PROBE_DETACH]
gcode:
  {% set probe_attached = printer['gcode_macro _PROBE_VARS'].probe_attached %}
  {% if probe_attached %}
    {action_raise_error("Probe is attached!")}
  {% endif %}

[gcode_macro _ERROR_PROBE_ATTACH]
gcode:
  {% set probe_attached = printer['gcode_macro _PROBE_VARS'].probe_attached %}
  {% if not probe_attached %}
    {action_raise_error("Probe is detached!")}
  {% endif %}

[gcode_macro PROBE_STATUS]
gcode:
  QUERY_PROBE
  _PROBE_STATUS

[gcode_macro _PROBE_STATUS]
gcode:
  {% if printer.probe.last_query %}
    SET_GCODE_VARIABLE MACRO=_PROBE_VARS VARIABLE=probe_attached VALUE={False}
  {% else %}
    SET_GCODE_VARIABLE MACRO=_PROBE_VARS VARIABLE=probe_attached VALUE={True}
  {% endif %}