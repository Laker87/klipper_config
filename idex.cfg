# This file contains a configuration snippet for a dual extruder
# printer using dual carriages (an "IDEX" printer).

# See docs/Config_Reference.md for a description of parameters.

# Definition for the secondary carriage and extruder1

##	Connected to Motor3
[dual_carriage]
axis: x
step_pin: PD5
dir_pin: !PD6
enable_pin: !PD4
microsteps: 128
full_steps_per_rotation: 200  #set to 400 for 0.9 degree stepper
rotation_distance: 30
endstop_pin: ^PA1
position_endstop: 482.75
position_min: 16
position_max: 482.75
homing_speed: 80
homing_retract_dist: 5

[tmc2209 dual_carriage]
uart_pin: PD7
#diag_pin: PB14
#driver_SGTHRS: 110
interpolate: False
run_current: 1.0
#hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 0
driver_TBL: 3
driver_TOFF: 3
driver_HSTRT: 4
driver_HEND: 0

##	Connected to Motor7
[extruder1]
step_pin: PE1
dir_pin: !PE0
enable_pin: !PC5
microsteps: 16
rotation_distance: 21.9	#Bondtech 5mm Drive Gears
gear_ratio: 50:10
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: PC8
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PC1 # TE1 Position
min_temp: 10
max_temp: 300
max_power: 1.0
min_extrude_temp: 170
max_extrude_only_distance: 100
smooth_time: 0.5
control = pid
pid_kp = 17.914
pid_ki = 1.231
pid_kd = 65.163
pressure_advance: 0.0
pressure_advance_smooth_time: 0.020

[tmc2209 extruder1]
uart_pin: PD11
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

# Helper script to park the carriage (called from T0 and T1 macros)
[gcode_macro PARK_extruder]
gcode:
    SAVE_GCODE_STATE NAME=park0
    G90
    G1 X{printer.configfile.settings.stepper_x.position_min+0.2} F12000
    RESTORE_GCODE_STATE NAME=park0

# Activate the primary extruder
[gcode_macro T0]
gcode:
    {% if printer.dual_carriage.active_carriage == "CARRIAGE_1" %}
        PARK_extruder1
    {% endif %}
    # {% set fan_speed = printer["gcode_macro M106"].swap_speed %}
    #     {% if fan_speed != -1 %}
    #         SET_FAN_SPEED FAN=fan_extruder SPEED={fan_speed}
    #     {% else %}
    #     # Update core Klipper's fan speed to the fan speed of the active toolhead
    #     # Only do this if you have a sacrificial [fan] section
    #     M106.1 S{printer["fan_generic fan_extruder"].speed * 255}
    # {% endif %}
    SET_DUAL_CARRIAGE CARRIAGE=0
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=1
    SET_STEPPER_ENABLE STEPPER=extruder1 ENABLE=0
    ACTIVATE_EXTRUDER EXTRUDER=extruder
    SWAP_CLEAN
    G1 F12000
    SET_GCODE_OFFSET X=0 Y=0

[gcode_macro PARK_extruder1]
gcode:
    SAVE_GCODE_STATE NAME=park1
    G90
    G1 X{printer.configfile.settings.dual_carriage.position_max-0.2} F12000
    RESTORE_GCODE_STATE NAME=park1

[gcode_macro T1]
gcode:
    {% if printer.dual_carriage.active_carriage != "CARRIAGE_1" %}
        PARK_extruder
    {% endif %}
    # {% set fan_speed = printer["gcode_macro M106"].swap_speed %}
    #     {% if fan_speed != -1 %}
    #         SET_FAN_SPEED FAN=fan_extruder1 SPEED={fan_speed}
    #     {% else %}
    #     # Update core Klipper's fan speed to the fan speed of the active toolhead
    #     # Only do this if you have a sacrificial [fan] section
    #     M106.1 S{printer["fan_generic fan_extruder1"].speed * 255}
    # {% endif %}
    SET_DUAL_CARRIAGE CARRIAGE=1
    SET_STEPPER_ENABLE STEPPER=extruder1 ENABLE=1
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
    ACTIVATE_EXTRUDER EXTRUDER=extruder1
    SWAP_CLEAN
    G1 F12000
    SET_GCODE_OFFSET X=0 Y=-0.8

[gcode_macro SWAP_CLEAN]
gcode:
    G1 E20 F200
    G1 E-2 F1800

[gcode_macro calibrate_separation]
gcode:
    G28
    G90
    M83
    G0 Z10 F600
    G1 Z0.1 F600                                                                                     
    G1 Y25 F12000
    G92 E0      
    T0 ; test T0
    G1 X175 Y150 Z.2 F4800
    G1 Y75 E6
    G0 E-2
    T1 ; test T1
    G1 X175 Y0 Z.2 F4800
    G1 Y74 E6
    G1 X300
    G0 E-2
    G28
    G0 Z100 F600